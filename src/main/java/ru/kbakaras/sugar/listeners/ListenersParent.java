package ru.kbakaras.sugar.listeners;

/**
 * Интерфейс, используемый {@link ListenersHandler} для уведомления о необходимости
 * подключения родительского слушателя. Уведомление {@link ListenersParent#addListenerParent(Object)}
 * происходит при добавлении первого клиентского слушателя, а уведомление
 * {@link ListenersParent#removeListenerParent(Object)} после отключения последнего. Таким
 * образом можно создавать коллекции слушателей, которые будут уведомляться внешним (родительским)
 * событием.
 * <br/><br/>Создано: kbakaras, в день: 01.12.2017.
 */
public interface ListenersParent<L> {
    /**
     * Срабатывает при добавлении первого клиентского слушателя
     * @param notifier <i>Notifier</i>-интерфейс к данному <i>ListenersHandler</i>-объекту. В простейшем случае
     *                 можно именно его передавать в качестве слушателя родительскому источнику
     *                 уведомлений.
     */
    void addListenerParent(L notifier);
    /**
     * Срабатывает при удалении последнего клиентского слушателя, когда в коллекции больше не остаётся слушателей.
     * @param notifier <i>Notifier</i>-интерфейс к данному <i>ListenersHandler</i>-объекту. В простейшем случае
     *                 можно именно его передавать в качестве слушателя родительскому источнику
     *                 уведомлений.
     */
    void removeListenerParent(L notifier);
}