package ru.kbakaras.sugar.restclient;

import org.apache.http.client.methods.HttpRequestBase;

/**
 * Класс отвечает за логику установки идентификационных заголовков rest-запросов.
 * Это может быть токен, содержащий сессию, или обычная basic-аутентификация.
 * <br/><br/>
 * Одна из реализаций не делает ничего. По сути, является заглушкой, позволяя
 * единообразно пользоваться rest-клиентом в случаях, когда нужно отправить
 * анонимный запрос.
 */
public interface SugarRestIdentity {

    /**
     * Выполняет первоначальную установку идентификационных заголовков в указанный
     * http-запрос.
     */
    void set(HttpRequestBase request);

    /**
     * Выполняет повторную установку идентификационных заголовков в указанный запрос.
     * Метод вызывается rest-клиентом при получении ответа 401. Реализация может
     * попытаться установить новую сессию, либо перечитать из настроек новое значение
     * логина и пароля (что именно - дело конкретной реализации) и обновить
     * идентификационные заголовки, чтобы rest-клиент мог попробовать повторить
     * запрос с новыми идентификационными данными.
     * <br/><br/>
     * Через возвращаемое логическое значение реализация сообщает rest-клиенту, имеет
     * ли смысл повторная попытка. Например, если удалось переустановить сессию и
     * получить новый токен, у повторной попытки есть шанс завершиться успешно (по
     * крайней мере, не получить отказ 401). В этом случае нужно вернуть true.
     */
    boolean refresh(HttpRequestBase request);


    @SuppressWarnings("unused")
    SugarRestIdentity NO_IDENTITY = new SugarRestIdentity() {
        @Override
        public void set(HttpRequestBase request) {}

        @Override
        public boolean refresh(HttpRequestBase request) {
            return false;
        }
    };

}
